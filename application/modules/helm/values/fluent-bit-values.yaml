resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

logLevel: info
luaScripts:
  setIndex.lua: |
    function set_index(tag, timestamp, record)
      index = "dakar-"
      if record["kubernetes"] ~= nil then
        if record["kubernetes"]["namespace_name"] ~= nil then
          if record["kubernetes"]["container_name"] ~= nil then
            record["es_index"] = index
                .. record["kubernetes"]["namespace_name"]
                .. "-"
                .. record["kubernetes"]["container_name"]
            return 1, timestamp, record
          end
          record["es_index"] = index
              .. record["kubernetes"]["namespace_name"]
          return 1, timestamp, record
        end
      end
      return 1, timestamp, record
    end
## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/classic-mode/configuration-file
config:
  service: |
    [SERVICE]
      Daemon Off
      Flush {{ .Values.flush }}
      Log_Level debug
      Parsers_File /fluent-bit/etc/parsers.conf
      Parsers_File /fluent-bit/etc/conf/custom_parsers.conf
      HTTP_Server On
      HTTP_Listen 0.0.0.0
      HTTP_Port {{ .Values.metricsPort }}
      Health_Check On
      Trace_Error On

  ## https://docs.fluentbit.io/manual/pipeline/inputs
  inputs: |
    [INPUT]
      Name tail
      Path /var/log/containers/rando*.log
      multiline.parser docker, cri
      Tag kube.*
      Mem_Buf_Limit 100MB
      Skip_Long_Lines On

    [INPUT]
      Name systemd
      Tag host.*
      Systemd_Filter _SYSTEMD_UNIT=kubelet.service
      Read_From_Tail On

    [INPUT]
      Name tail
      Path /var/log/containers/ingress-nginx-controller-*.log
      multiline.parser docker, cri
      Tag nginx.ingress.*
      Mem_Buf_Limit 100MB
      Skip_Long_Lines On

    [INPUT]
      Name tail
      Path /var/log/containers/mongodb-app-*.log
      multiline.parser docker, cri
      Tag mongodb.*
      Mem_Buf_Limit 100MB
      Skip_Long_Lines On

  ## https://docs.fluentbit.io/manual/pipeline/filters
  filters: |
    [FILTER]
      Name kubernetes
      Match kube.*
      Merge_Log On
      Keep_Log Off
      Buffer_Size False
      K8S-Logging.Parser On

    [FILTER]
      Name parser
      Match nginx.ingress.*
      Key_Name log
      Parser nginx_ingress_parser
      Reserve_Data On

    [FILTER]
      Name parser
      Match mongodb.*
      Key_Name log
      Parser json_parser
      Reserve_Data On

  ## https://docs.fluentbit.io/manual/pipeline/outputs
  outputs: |
    [OUTPUT]
      Name es
      Match kube.*
      Index fluent-bit
      Type  _doc
      Host elasticsearch-master
      Port 9200
      HTTP_User elastic
      HTTP_Passwd stbTziSgGy6tMvhX
      tls On
      tls.verify Off
      Logstash_Format On
      Logstash_Prefix logstash
      Retry_Limit False
      Suppress_Type_Name On

    [OUTPUT]
      Name es
      Match nginx.ingress.*
      Type _doc
      Host elasticsearch-master
      Port 9200
      HTTP_User elastic
      HTTP_Passwd stbTziSgGy6tMvhX
      tls On
      tls.verify Off
      Logstash_Format On
      Logstash_Prefix nginx-ingress
      Retry_Limit False
      Suppress_Type_Name On

    [OUTPUT]
      Name es
      Match host.*
      Index fluent-bit
      Type  _doc
      Host elasticsearch-master
      Port 9200
      HTTP_User elastic
      HTTP_Passwd stbTziSgGy6tMvhX
      tls On
      tls.verify Off
      Logstash_Format On
      Logstash_Prefix node
      Retry_Limit False
      Suppress_Type_Name On

    [OUTPUT]
      Name es
      Match mongodb.*
      Index fluent-bit
      Type  _doc
      Host elasticsearch-master
      Port 9200
      HTTP_User elastic
      HTTP_Passwd stbTziSgGy6tMvhX
      tls On
      tls.verify Off
      Logstash_Format On
      Logstash_Prefix mongo
      Retry_Limit False
      Suppress_Type_Name On

  customParsers: |
    [PARSER]
      Name json_parser
      Format json
      Time_Key time
      Time_Format %Y-%m-%dT%H:%M:%S.%NZ

    [PARSER]
      Name regex_parser
      Format regex
      Regex /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
      Time_Format %Y-%m-%dT%H:%M:%S.%N%:z

    [PARSER]
      Name nginx_ingress_parser
      Format regex
      Regex ^(?<remote_addr>[^ ]*) - (?<remote_user>[^ ]*) \[(?<time>[^\]]*)\] "(?<request_method>\S+)(?: +(?<request_uri>[^\"]*) +\S*)?" (?<status>[^ ]*) (?<body_bytes_sent>[^ ]*) "(?<http_referer>[^\"]*)" "(?<http_user_agent>[^\"]*)" (?<request_length>[^ ]*) (?<request_time>[^ ]*) \[(?<upstream_name>[^\]]*)\] \[\] (?<upstream_addr>[^ ]*) (?<upstream_response_length>[^ ]*) (?<upstream_response_time>[^ ]*) (?<upstream_status>[^ ]*) (?<request_id>[^ ]*)$
      Time_Key time
      Time_Format %d/%b/%Y:%H:%M:%S %z